---
title: "Collaborative Editing with Collabora"
desc: "Scroogle docks? Micro$oft 360? We can do that trick too!"
sortable: 5
---

[Collabora Office](http://collaboraoffice.com) is a free distribution of [LibreOffice Online](https://wiki.documentfoundation.org/Development/LibreOffice_Online). We will be using their docker distribution.

1. Install Docker (instructions from [here](https://www.itzgeek.com/how-tos/linux/debian/how-to-install-docker-on-debian-9.html)).
   ```
   # apt install apt-transport-https ca-certificates wget software-properties-common
   # wget https://download.docker.com/linux/debian/gpg
   # apt-key add gpg
   # echo "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee -a /etc/apt/sources.list.d/docker.list
   # apt update
   # apt-cache policy docker-ce
   # apt install docker-ce
   # systemctl enable docker
   # systemctl start docker
   ```
2. Use Docker to install collabora CODE.
   ```
   # docker pull collabora/code
   ```
3. Start collabora.
   ```
   docker run -t -d -p 127.0.0.1:9980:9980 -e 'domain=subdomain\\.domain\\.com' --restart always --cap-add MKNOD collabora/code
   ```
   Notice the double-escaped .'s in the domain name. It's so that it'll be escaped by a [real backslash](https://www.xkcd.com/1638/).
4. Create the file `/etc/nginx/sites-available/lool` containing the following:
   ```
   server {
      listen       9979 ssl;
      server_name  subdomain.domain.com;

      ssl_certificate         /etc/letsencrypt/live/subdomain.domain.com/fullchain.pem;
      ssl_certificate_key     /etc/letsencrypt/live/subdomain.domain.com/privkey.pem;
    
      # static files
      location ^~ /loleaflet {
          proxy_pass https://localhost:9980;
          proxy_set_header Host $http_host;
      }

      # WOPI discovery URL
      location ^~ /hosting/discovery {
          proxy_pass https://localhost:9980;
          proxy_set_header Host $http_host;
      }

      # main websocket
      location ~ ^/lool/(.*)/ws$ {
          proxy_pass https://localhost:9980;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_set_header Host $http_host;
          proxy_read_timeout 36000s;
      }
   
      # download, presentation and image upload
      location ~ ^/lool {
          proxy_pass https://localhost:9980;
          proxy_set_header Host $http_host;
      }
   
      # Admin Console websocket
      location ^~ /lool/adminws {
          proxy_pass https://localhost:9980;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_set_header Host $http_host;
          proxy_read_timeout 36000s;
      }
   }
   ```
   The port number 9979 in the above block is deeply arbitrary (chosen because it's one less than 9980, which is also arbitrarily chosen by the folks at collabora, because it was used by the folks working on LibreOffice Online. You're welcome, pass it on). The way this works is that collabora cannot handle being installed to a subdirectory; it instead vomits up a css-free, js-free, office-free non-experience. Therefore, we install it as a reverse-proxy under nginx, so whenever someone visits port 9979 on your website, it is passed through by nginx to the proxy server listening on port 9980, which is itself inside a docker container. Nice and cozy, insulated in many layers of glop. And if you're installing all of this in a VM, that would be rather special now, wouldn't it!
   5. Open tcp port 9979 up to the outside world (I like firewalld so that's what I support).
   ```
   # firewall-cmd --add-port=9979/tcp --permanent
   # firewall-cmd --reload
   ```
   6. Within your [nextcloud installation](file-sharing-with-nextcloud.html), install the Collabora Online app.
   7. Under the Collabora Online settings in your nextcloud settings pannel, set the Collabora Online server field to `https://subdomain.domain.com:9979`
   8. Happy online editing!

If this isn't your first stab at getting collabora working, I would recommend deleting the autogenerated richdocuments xml:
```
# rm /path/to/nextcloud/data/appdata_*/richdocuments/richdocuments/discovery.xml
```
